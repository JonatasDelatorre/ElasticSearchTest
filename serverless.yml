service: opensearch-sample

configValidationMode: error

custom:
  stage: ${opt:stage, self:provider.stage} 
  region: ${opt:region, self:provider.region}
  deployment_bucket: ${self:service}-deployment-${self:custom.stage}
  accountid: ${aws:accountId}
  pythonRequirements:
    dockerizePip: non-linux
  individually-for-dev: 
    dev: False

provider:
  name: aws
  runtime: python3.8
  stage: dev
  region: us-east-1
  stackName: ${self:service}-${self:custom.stage}
  stackTags:
    Owner: JontasDelatorre
  deploymentBucket:
    name: ${self:custom.deployment_bucket}
    serverSideEncryption: AES256

package:
  individually: true
  patterns:
    - '!venv/**'
    - '!test/**'
    - '!buildspec.yml'
    - '!functions/**'
    - '!README.md'
    - '!node_modules/**'
    - '!src/**'
    - '!package-lock.json'
    - '!package.json'
    - '!resources.yml'
    - '!step_functions.yml'

functions:
  ConsumerLambda:
    handler: src/kinesis_consumer.handler
    name: ${self:service}-consumer-${self:custom.stage}
    description: Lambda for kinesis stream consumer
    memorySize: 1024
    timeout: 300
    events:
      - stream:
          type: kinesis
          arn: !GetAtt KinesisClickStream.Arn
    environment:
      BUCKET: !Ref ClickstreamOutput
      OPENSEARCH: !GetAtt OpenSearchClickstream.DomainEndpoint
    package:
      patterns:
        - src/kinesis_consumer.py
    iamRoleStatementsName: ${self:service}-consumer-${self:custom.stage}
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - s3:GetObject
          - s3:GetObjectVersion
          - s3:ListBucket
          - s3:PutObject
          - s3:GetObject
          - s3:GetObjectVersion
          - s3:ListBucket
        Resource:
          - !GetAtt ClickstreamOutput.Arn
          - !Join [ "", [ !GetAtt ClickstreamOutput.Arn, "/*"] ]
      - Effect: "Allow"
        Action:
          - kinesis:DescribeStream
          - kinesis:DescribeStreamSummary
          - kinesis:GetRecords
          - kinesis:ListShards
          - kinesis:GetShardIterator
          - kinesis:ListStreams
          - kinesis:SubscribeToShard
        Resource:
          - !GetAtt KinesisClickStream.Arn

resources:
  Resources:
    KinesisClickStream:
      Type: AWS::Kinesis::Stream
      Properties: 
        Name: ${self:service}-clickstream-${self:custom.stage}
        ShardCount: 1
        StreamModeDetails: 
          StreamMode: PROVISIONED

    ClickstreamOutput:
      Type: AWS::S3::Bucket
      Properties:
        VersioningConfiguration:
          Status: Enabled
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256
        BucketName: !Sub ${self:service}-clickstream-output-${AWS::AccountId}-${self:custom.stage}

    OpenSearchVpc:
      Type: AWS::EC2::VPC
      Properties: 
        CidrBlock: 10.0.0.0/16

    OpenSearchVpcInternetGateway:
      Type: AWS::EC2::InternetGateway
      Properties:
        Tags:
        - Key: stack
          Value: test

    OpenSearchVpcInternetGatewayAttach:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties: 
        InternetGatewayId: !Ref OpenSearchVpcInternetGateway
        VpcId: !Ref OpenSearchVpc

    OpenSearchRouteTable:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref OpenSearchVpc
        Tags:
          - Key: stack
            Value: test

    OpenSearchRoute:
      Type: AWS::EC2::Route
      Properties: 
        DestinationCidrBlock: 0.0.0.0/0
        GatewayId: !Ref OpenSearchVpcInternetGateway
        RouteTableId: !Ref OpenSearchRouteTable

    OpenSearchSubnetA:
      Type: AWS::EC2::Subnet
      Properties: 
        AvailabilityZone: us-east-1a
        CidrBlock: 10.0.0.0/24
        VpcId: !Ref OpenSearchVpc

    OpenSearchSubnetB:
      Type: AWS::EC2::Subnet
      Properties: 
        AvailabilityZone: us-east-1b
        MapPublicIpOnLaunch: true
        CidrBlock: 10.0.1.0/24
        VpcId: !Ref OpenSearchVpc

    OpenSearchSecurityGroupA:
      Type: AWS::EC2::SecurityGroup
      Properties: 
        GroupName: ${self:service}-clickstreama-${self:custom.stage}
        GroupDescription: OpenSearch SGB
        SecurityGroupEgress:
          - CidrIp: 0.0.0.0/0
            IpProtocol: "-1"
        SecurityGroupIngress:
          - CidrIp: 0.0.0.0/0
            IpProtocol: "-1"
            SourceSecurityGroupId: !Ref OpenSearchSecurityGroupB
        VpcId: !Ref OpenSearchVpc

    OpenSearchSecurityGroupB:
      Type: AWS::EC2::SecurityGroup
      Properties: 
        GroupName: ${self:service}-clickstreamb-${self:custom.stage}
        GroupDescription: OpenSearch SGB
        SecurityGroupEgress:
          - CidrIp: 0.0.0.0/0
            IpProtocol: "-1"
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            CidrIp: 10.0.1.0/24
          - IpProtocol: tcp
            FromPort: 443
            ToPort: 443
            CidrIp: 10.0.1.0/24
        VpcId: !Ref OpenSearchVpc

    OpenSearchLinkedRole:
      Type: AWS::IAM::ServiceLinkedRole
      Properties:
        AWSServiceName: es.amazonaws.com
        Description: 'Role for ES to access resources in my VPC'

    OpenSearchClickstream:
      DependsOn: OpenSearchLinkedRole
      Type: AWS::OpenSearchService::Domain
      Properties: 
        ClusterConfig: 
          InstanceCount: 1
          InstanceType: t3.small.search
        EBSOptions: 
          EBSEnabled: true
          VolumeSize: 10
          VolumeType: gp2
        CognitoOptions: 
          Enabled: true
          IdentityPoolId: !Ref OpenSearchDashboardIdentityPool
          UserPoolId: !Ref OpenSearchDashboardUserPool
        DomainName: ${self:service}-${self:custom.stage}
        EncryptionAtRestOptions: 
          Enabled: true
        VPCOptions: 
          SecurityGroupIds: 
            - !Ref OpenSearchSecurityGroupA
          SubnetIds: 
            - !Ref OpenSearchSubnetA

    Ec2Bastion:
      Type: AWS::EC2::Instance
      Properties: 
        AvailabilityZone: us-east-1b
        ImageId: ami-033b95fb8079dc481
        InstanceType: t2.micro
        KeyName: bastion-opensearch
        SecurityGroupIds: 
          - !Ref OpenSearchSecurityGroupB
        SubnetId: !Ref OpenSearchSubnetB

    OpenSearchDashboardUserPool:
      Type: AWS::Cognito::UserPool
      Properties: 
        AdminCreateUserConfig: 
          AllowAdminCreateUserOnly: false
        MfaConfiguration: OFF
        UsernameAttributes: 
          - email
        UserPoolName: ${self:service}-clickstream-${self:custom.stage}

    OpenSearchDashboardUserPoolDomain:
      Type: AWS::Cognito::UserPoolDomain
      Properties: 
        Domain: ${self:service}-clickstream-${self:custom.stage}
        UserPoolId: !Ref OpenSearchDashboardUserPool

    OpenSearchDashboardUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties: 
        CallbackURLs: 
          - "https://"
        ClientName: ${self:service}-clickstream-${self:custom.stage}
        SupportedIdentityProviders: 
          - COGNITO
        UserPoolId: !Ref OpenSearchDashboardUserPool

    OpenSearchDashboardIdentityPool:
      Type: AWS::Cognito::IdentityPool
      Properties: 
        AllowUnauthenticatedIdentities: false
        CognitoIdentityProviders: 
          - ClientId: !Ref OpenSearchDashboardUserPoolClient
            ProviderName: !GetAtt OpenSearchDashboardUserPool.ProviderName
        IdentityPoolName: ${self:service}-clickstream-${self:custom.stage}


plugins:
  - serverless-iam-roles-per-function # Plugin de criação de role e policy para cada lambda
  - serverless-python-requirements #Plugin para automatizar a inclusao dos pacotes presentes no requirements
  - serverless-deployment-bucket #Plugin para gerenciar criacao de bucket de deployment

      # OpenSearchClickstream:
      # DependsOn: OpenSearchLinkedRole
      # Type: AWS::OpenSearchService::Domain
      # Properties: 
      #   AccessPolicies:
      #     Version: '2012-10-17'
      #     Statement:
      #     - Effect: Allow
      #       Principal:
      #         AWS: "*"
      #       Action:
      #         - es:*
      #       Resource: arn:aws:es:us-east-1:103751604192:domain//*
      #       Condition:
      #         IpAddress:
      #           aws:SourceIp:
      #             - 189.6.237.237
      #   ClusterConfig: 
      #     InstanceCount: 1
      #     InstanceType: t3.small.search
      #   EBSOptions: 
      #     EBSEnabled: true
      #     VolumeSize: 10
      #     VolumeType: gp2
      #   DomainName: ${self:service}-${self:custom.stage}
      #   EncryptionAtRestOptions: 
      #     Enabled: true
      #   VPCOptions: 
      #     SecurityGroupIds: 
      #       - !Ref OpenSearchSecurityGroupA
      #     SubnetIds: 
      #       - !Ref OpenSearchSubnetA